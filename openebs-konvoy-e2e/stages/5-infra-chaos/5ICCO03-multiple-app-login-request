#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
### Taint the node to run infra chaos test scripts

node_name=$(ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa kubectl get nodes --no-headers | grep -v master | awk 'FNR==5 {print $1}')
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa "kubectl taint nodes $node_name infra-aid=observer:NoSchedule"
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa "mkdir infra && echo $node_name >> infra/node_name"

echo $node_name
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa 'cd e2e-konvoy && bash openebs-konvoy-e2e/stages/5-infra-chaos/5ICCO03-multiple-app-login-request node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$node_name'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
source ~/.profile
gittoken=$(echo "$github_token")
case_id=5ICCO03
observer_node=$4

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir
bash openebs-konvoy-e2e/utils/e2e-cr jobname:multiple-app-login jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:node-failure-csi-cstor jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:containerd-failure-csi-cstor jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:multiple-app-login jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# e2eBook 1 #
################

echo "*******Deploying Busybox-Deployment****"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=busybox-provision-multiple-app-login metadata="")
echo $test_name

cd cstor-operators/e2e-tests
echo "Running the e2e test for Busybox Deployment.."
cp apps/busybox/deployers/run_e2e_test.yml app_deploy_multiple_app_login.yml

sed -i -e 's/app-busybox-ns/multiple-app-login/g' \
-e 's/busybox-e2e/multiple-app-login/g' \
-e 's/app=busybox/app=multiple-app-login/g' \
-e 's/statefulset/deployment/g' app_deploy_multiple_app_login.yml

cat app_deploy_multiple_app_login.yml

bash ../../openebs-konvoy-e2e/utils/e2e_job_runner label='app:multiple-app-login' app_deploy_multiple_app_login.yml
cd ../..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:multiple-app-login $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# e2eBook 2 #
################

run_id="multiple-app-login";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_e2e_test.yml busybox_loadgen_multiple_app_login_csi_cstor.yml

# Update the environmental variables in e2e job spec.

sed -i -e 's/value: app-busybox-ns/value: multiple-app-login/g' \
-e 's/app=busybox/app=multiple-app-login/g' \
-e 's/liveness: e2e-busybox-liveness/liveness: busybox-liveness-multiple-app-login/g' busybox_loadgen_multiple_app_login_csi_cstor.yml

cat busybox_loadgen_multiple_app_login_csi_cstor.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' busybox_loadgen_multiple_app_login_csi_cstor.yml

# Run the e2e job and get the details of the e2e job from e2e_job_runner utils.
bash ../../openebs-konvoy-e2e/utils/e2e_job_runner label='liveness:busybox-liveness-multiple-app-login' job=busybox_loadgen_multiple_app_login_csi_cstor.yml
cd ../..
# Get the cluster state Once the e2e jobs completed.
bash openebs-konvoy-e2e/utils/dump_cluster_state;
# Update the e2e event for the job.
bash openebs-konvoy-e2e/utils/event_updater jobname:multiple-app-login $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# e2eBook 3 #
################

run_id="csi-cstor";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=multiple-application-on-single-volume metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
cp experiments/infra-chaos/multiple_application_on_single_volume/run_e2e_test.yml run_multi_app_login.yml

sed -i -e 's/password:/password: cGFzc3dvcmQ=/g' \
-e 's/name: node-password/name: node-password-multiple-app/g' \
-e 's/passwordNode:/passwordNode: UmFuZG9t/g' run_multi_app_login.yml

sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: multiple-app-login/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: '\''app=multiple-app-login'\''/}' \
-e '/name: APP_PVC/{n;s/.*/            value: openebs-busybox/}' run_multi_app_login.yml

sed -i -e "s|#nodeSelector|nodeSelector|g" \
-e "s|#  kubernetes.io/hostname:|  kubernetes.io/hostname: ${observer_node}|g" run_multi_app_login.yml

sed -i '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' run_multi_app_login.yml

sed -i '/name: ESX_HOST_IP/{n;s/.*/            value: 10.43.1.1/}' run_multi_app_login.yml

sed -i '/parameters.yml: |/a \
    blocksize: 4k\
    blockcount: 1024\
    testfile: nodefailure
' run_multi_app_login.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_multi_app_login.yml

cat run_multi_app_login.yml

bash ../../openebs-konvoy-e2e/utils/e2e_job_runner label='name:multiple-app' run_multi_app_login.yml
cd ../..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:multiple-app-login $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# e2eBook 4 #
################

run_id="deprovision-multiple-app-login";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_e2e_test.yml busybox_loadgen_deprovision_multi_app_login.yml

# Update the environmental variables in e2e job spec.

sed -i -e 's/value: app-busybox-ns/value: multiple-app-login/g' \
-e 's/app=busybox/app=multiple-app-login/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/generateName: e2e-busybox-liveness/generateName: busybox-liveness-dep-multiple-app-csi/g' \
-e 's/liveness: e2e-busybox-liveness/liveness: busybox-liveness-deprovision-multiple-app-csi/g' busybox_loadgen_deprovision_multi_app_login.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' busybox_loadgen_deprovision_multi_app_login.yml

cat busybox_loadgen_deprovision_multi_app_login.yml
# Run the e2e job and get the details of the e2e job from e2e_job_runner utils.
bash ../../openebs-konvoy-e2e/utils/e2e_job_runner label='liveness:busybox-liveness-deprovision-multiple-app-csi' job=busybox_loadgen_deprovision_multi_app_login.yml
cd ../..
# Get the cluster state Once the e2e jobs completed.
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:multiple-app-login $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)

# Update result of the test case in github mayadata-io/e2e-konvoy repository.
if [ "$rc_val" != "0" ]; then
exit 1;
fi

################
# e2eBook 5 #
################

echo "********Deprovisioning Busybox Application*******"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=busybox-deprovision-multiple-app-login metadata="")
echo $test_name

cd cstor-operators/e2e-tests
cp apps/busybox/deployers/run_e2e_test.yml deprovision_multi_app_login.yml

sed -i -e 's/generateName: e2e-busybox-deploy/generateName: e2e-busybox-deprovision-csi/g' \
-e 's/app-busybox-ns/multiple-app-login/g' \
-e 's/app=busybox/app=multiple-app-login/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/busybox-e2e/busybox-deprovision-multiple-app-csi/g' \
-e 's/openebs-cstor-csi/openebs-cstor-cspc-disk/g' \
-e 's/value: provision/value: deprovision/g' deprovision_multi_app_login.yml

cat deprovision_multi_app_login.yml

bash ../../openebs-konvoy-e2e/utils/e2e_job_runner label='app:busybox-deprovision-multiple-app-csi' deprovision_multi_app_login.yml
cd ../..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:multiple-app-login $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

# testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

if [ "$rc_val" != "0" ]; then
bash openebs-konvoy-e2e/utils/e2e-cr jobname:multiple-app-login jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

bash openebs-konvoy-e2e/utils/e2e-cr jobname:multiple-app-login jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6
else
  pod
fi
