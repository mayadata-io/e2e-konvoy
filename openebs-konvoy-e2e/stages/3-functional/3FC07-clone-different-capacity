#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa 'cd e2e-konvoy && bash openebs-konvoy-e2e/stages/3-functional/3FC07-clone-different-capacity node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile
gittoken=$(echo "$github_token")
case_id=3FC07

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-konvoy-e2e/utils/pooling jobname:snapshot-clone
bash openebs-konvoy-e2e/utils/e2e-cr jobname:clone-different-capacity jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# e2eBook 1 #
################

run_id="different-capacity";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=create-clone metadata=${run_id})
echo $test_name

cd e2e-tests
cp experiments/functional/clone-creation/run_e2e_test.yml run_diff_vol_size_clone.yml

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specific value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appNamespace      | env    | app-busybox-ns                      | busybox-snap                                     |    
 | appPVC            | env    | openebs-busybox                     | busybox-snapshot                                 |
 | clonePVC          | env    | clone-busybox                       | clone-different-capacity                         |
 | volume size       | env    | value: 5G                           | value: 4G                                        |
 | e2e job label  | label  | app: e2e-clone                   | app: clone-different-capacity                    |
 | e2e Job name   | name   | generateName: e2e-clone-         | generateName: e2e-clone-different-capacity-   |
  ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: app-busybox-ns/value: busybox-snap/g' \
-e 's/value: openebs-busybox/value: busybox-snapshot/g' \
-e 's/value: clone-busybox/value: clone-different-capacity/g' \
-e 's/value: 5G/value: 4G/g' \
-e 's/app: e2e-clone/app: clone-different-capacity/g' \
-e 's/generateName: e2e-clone-/generateName: e2e-clone-different-capacity-/g' run_diff_vol_size_clone.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_diff_vol_size_clone.yml

echo "Running the e2e test for Busybox Deployment Clone.."
cat run_diff_vol_size_clone.yml

bash ../openebs-konvoy-e2e/utils/e2e_job_runner label='app:clone-different-capacity' job=run_diff_vol_size_clone.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:clone-different-capacity $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
rc_val=$(echo $?)

# Obtain the status of the test using e2eresult(lr) 
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-konvoy-e2e/utils/e2e-cr jobname:clone-different-capacity jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id 3FC07 3-functional "Check if the clone can't be created with different volume capacity" $testResult "$current_time" $gittoken
exit 1;
fi

bash openebs-konvoy-e2e/utils/e2e-cr jobname:clone-different-capacity jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id 3FC07 3-functional "Check if the clone can't be created with different volume capacity" Pass "$current_time" $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi