#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa 'cd e2e-konvoy && bash openebs-konvoy-e2e/stages/3-functional/3FC06-create-cstor-clone node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile
gittoken=$(echo "$github_token")
case_id=3FC06

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-konvoy-e2e/utils/pooling jobname:snapshot
bash openebs-konvoy-e2e/utils/e2e-cr jobname:snapshot-clone jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=create-clone metadata="")
echo $test_name

cd e2e-tests
cp experiments/functional/clone-creation/run_e2e_test.yml run_clone_test.yml

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specific value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appPVC            | env    | openebs-busybox                     |  busybox-snapshot                                |
 | appNamespace      | env    | app-busybox-ns                      |  busybox-snap                                    | 
 ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: openebs-busybox/value: busybox-snapshot/g' \
-e 's/value: app-busybox-ns/value: busybox-snap/g' run_clone_test.yml

echo "Running the e2e test for Busybox Deployment Clone.."
cat run_clone_test.yml

bash ../openebs-konvoy-e2e/utils/e2e_job_runner label='app:e2e-clone' job=run_clone_test.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:snapshot-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-konvoy-e2e/utils/e2e-cr jobname:snapshot-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id 3FC06 3-functional "Check if the clone can be created using volume snapshot" Fail "$current_time" $gittoken
exit 1;
fi

bash openebs-konvoy-e2e/utils/e2e-cr jobname:snapshot-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id 3FC06 3-functional "Check if the clone can be created using volume snapshot" Pass "$current_time" $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi