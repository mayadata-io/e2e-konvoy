#!/bin/bash
set -x
pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-konvoy && bash openebs-konvoy-e2e/pipelines/OpenEBS-base/stages/2-Infra-setup/openebs-deploy/infra-setup node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$FROM_VERSION'"' '"'$OLD_NDM_TAG'"' '"'$E_USER'"' '"'$E_PASSWORD'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
ndmTag=$(echo $5)
case_id=XJGT
elastic_user=$(echo $6)
elastic_password=$(echo $7)

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

for i in efk-vars.yml efk.yml get_url.yml; do
  wget https://raw.githubusercontent.com/openebs/e2e-infrastructure/master/workload/efk-client/playbook/$i
done

echo "EFK: Deploying Aggregrator and Forwarder on client"
ansible-playbook efk.yml --extra-vars "commit_id=$commit_id pipeline_id=$pipeline_id e_user=$elastic_user e_password=$elastic_password" 

# Applying e2e-CRD
echo "***Applying e2e-crd***********"
kubectl apply -f openebs-konvoy-e2e/utils/e2e-crd.yml

echo "*****Deploying openebs*******"
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j1-openebs-deploy jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j1-openebs-deploy jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:cstor-integration-test jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-jiva-volume jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-cstor-negative-invalid-storage-pool-claim jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-jiva-node-stickiness jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-jiva-snapshot jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-jiva-clone jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-cstor-volume-clone-provisioning jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-cstor-snapshot-provisioning jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:bdd-cstor-volume-provisioning jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j2-cstor-striped-pool jobphase:Waiting 
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j3-cstor-mirrored-pool jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j4-cstor-raidz1-pool jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j5-cstor-raidz2-pool jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j6-cstor-cspc-striped-pool jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j7-policies jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j8-csi-provisioner jobphase:Waiting
# bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j9-nfsv4-provision jobphase:Waiting
#bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j10-nfsv3-provision jobphase:Waiting

source ~/.profile

######################################################

echo "Generating test name***************************"
test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=openebs-provision metadata="")
echo $test_name

## Clone the litmus repo, navigate to litmus root 

git clone https://github.com/mayadata-io/litmus.git
cd litmus

cp providers/openebs/installers/operator/openebs-provision/run_litmus_test.yml run_openebs_provision.yml

sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e '/name: RELEASE_VERSION/{n;s/.*/            value: '"'$releaseTag'"'/}' \
-e '/name: OPERATOR_NS/{n;s/.*/            value: openebs/}' \
-e '/name: NDM_TAG/{n;s/.*/            value: '"'$ndmTag'"'/}' run_openebs_provision.yml

cat run_openebs_provision.yml

#################
## RUNNER MAIN ##
#################

echo "Applying rbac.yml********************************"
kubectl apply -f ./hack/rbac.yaml
kubectl apply -f ./hack/crds.yaml

echo "Copying kube config for litmus"
cp ~/.kube/config admin.conf
kubectl create cm kubeconfig --from-file=admin.conf -n litmus

echo "Running litmus test for openebs deploy.."

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app: openebs-provision' job=run_openebs_provision.yml

echo "Dumping state of cluster post job run"; echo ""
bash ../openebs-konvoy-e2e/utils/dump_cluster_state;
cd ..
bash openebs-konvoy-e2e/utils/event_updater jobname:s2-j1-openebs-deploy $test_name jobid:"$job_id" pipelineid:"$pipeline_id"
#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-konvoy-e2e/utils/e2e-cr jobname:s2-j1-openebs-deploy jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7 $8
else
  pod
fi
