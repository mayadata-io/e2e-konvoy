#!/bin/bash
set -x

#################
## ENVIRONMENT ##
#################

## https://github.com/openebs/litmus/blob/master/apps/percona/chaos/openebs_volume_replica_failure/test_vars.yml
run_id="single";test_name=$(${utils_path}/generate_test_name testcase=openebs-volume-replica-failure metadata=${run_id})

###################
## DEPENDENCIES  ##
###################

${utils_path}/setup_dependencies litmus-test

## Clone the litmus repo, checkout the e2e branch, navigate to litmus root 

git clone https://github.com/litmuschaos/litmus.git
cd litmus

############################
## LITMUS PRECONDITIONING ##
############################

cp experiments/chaos/openebs_volume_replica_failure/run_litmus_test.yml run_test.yml 

sed -i -e 's/name: openebs-volume-replica-failure/name: jiva-single-replica-failure/g' \
-e 's/name: replica-failure/name: single-replica-failure/g' \
-e 's/value: app-percona-ns/value: percona-single-replica/g' run_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_test.yml

#################
## RUNNER MAIN ##
#################

echo "Running the litmus test.."
${utils_path}/litmus_job_runner label='name:jiva-single-replica-failure' job=run_test.yml
${utils_path}/task_delimiter;

echo "Dumping state of cluster post job run"; echo ""
${utils_path}/dump_cluster_state;
${utils_path}/task_delimiter;

#################
## GET RESULT  ##
#################

## Check the test status & result from the litmus result custom resource
${utils_path}/get_litmus_result ${test_name}
