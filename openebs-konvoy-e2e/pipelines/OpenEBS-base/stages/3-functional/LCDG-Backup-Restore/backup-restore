#!/bin/bash


pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-konvoy && bash openebs-konvoy-e2e/pipelines/OpenEBS-base/stages/3-functional/LCDG-Backup-Restore/backup-restore node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=LCDG

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

echo "*******Deploying Percona Application****"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=percona-deployment metadata="")
echo $test_name

cd litmus
echo "Running the litmus test for Percona Deployment.."

cp apps/percona/deployers/run_litmus_test.yml percona_backup_restore.yml

sed -i -e 's/app: percona-deployment/app: deploy-percona-backup-restore/g' \
-e 's/value: openebs-standard/value: openebs-cstor-disk/g' \
-e 's/value: app-percona-ns/value: percona-backup/g' percona_backup_restore.yml
cat percona_backup_restore.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:deploy-percona-backup-restore' job=percona_backup_restore.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:backup-restore $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LCDG 3-functional "Create backup and restore and verify if the application is not impacted" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 2 #
################

echo "*******Performing Backup and Restore on Target**********"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=velero-backup-restore metadata="")
echo $test_name

cd litmus
cp experiments/functional/backup_and_restore/run_litmus_test.yml run_backuprestore_test.yml

sed -i 's/value: app-percona-ns/value: percona-backup/g' run_backuprestore_test.yml

echo "Running the litmus test for Percona Backup Restore.."
cat run_backuprestore_test.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:velero-backup-restore' job=run_backuprestore_test.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:backup-restore $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LCDG 3-functional "Create backup and restore and verify if the application is not impacted" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LCDG 3-functional "Create backup and restore and verify if the application is not impacted" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi