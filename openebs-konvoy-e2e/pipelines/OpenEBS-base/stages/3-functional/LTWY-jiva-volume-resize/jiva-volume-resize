#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-konvoy && bash openebs-konvoy-e2e/pipelines/OpenEBS-base/stages/3-functional/LTWY-jiva-volume-resize/jiva-volume-resize node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=LTWY

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-konvoy-e2e/utils/e2e-cr jobname:jiva-volume-resize jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:jiva-volume-resize jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

echo "*******Deploying percona Application****"

run_id="jiva-volume-resize";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test for percona Deployment.."

cp apps/percona/deployers/run_litmus_test.yml percona_jiva_volume_resize.yml

sed -i -e 's/app: percona-deployment/app: deploy-percona-jiva-volume-resize/g' \
-e 's/generateName: litmus-percona-/generateName: litmus-percona-jiva-volume-resize-/g' \
-e 's/value: openebs-standard/value: openebs-jiva-default/g' \
-e 's/value: enabled/value: /g' \
-e 's/value: enable/value: /g' \
-e 's/value: app-percona-ns/value: jiva-volume-resize/g' percona_jiva_volume_resize.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_jiva_volume_resize.yml

cat percona_jiva_volume_resize.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:deploy-percona-jiva-volume-resize' job=percona_jiva_volume_resize.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:jiva-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LTWY 3-functional "Resize the jiva volume and verify application status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 2 #
################

run_id="jiva-volume-resize";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=percona-loadgen metadata=${run_id})
echo $test_name

cd litmus
cp apps/percona/workload/run_litmus_test.yml percona_loadgen_jiva_volume_resize.yml

# Update the environmental variables in litmus job spec.

sed -i -e 's/value: app-percona-ns/value: jiva-volume-resize/g' \
-e 's/generateName: percona-loadgen-/generateName: percona-loadgen-jiva-volume-resize-/g' \
-e 's/loadgen: percona-loadjob/loadgen: percona-loadjob-jiva-volume-resize/g' percona_loadgen_jiva_volume_resize.yml

cat percona_loadgen_jiva_volume_resize.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_loadgen_jiva_volume_resize.yml

# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='loadgen:percona-loadjob-jiva-volume-resize' job=percona_loadgen_jiva_volume_resize.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash openebs-konvoy-e2e/utils/dump_cluster_state;
# Update the e2e event for the job.
bash openebs-konvoy-e2e/utils/event_updater jobname:jiva-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LTWY 3-functional "Resize the jiva volume and verify application status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 3 #
################

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=jiva-volume-resize metadata="")
echo $test_name

cd litmus
cp experiments/functional/jiva-volume-resize/run_litmus_test.yml run_jiva_volume_resize.yml

sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: 'jiva-volume-resize'/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: 'name=percona'/}' \
-e '/name: APP_PVC/{n;s/.*/            value: 'percona-mysql-claim'/}' run_jiva_volume_resize.yml

echo "Running the litmus test for resizing of jiva volume.."
cat run_jiva_volume_resize.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:litmus-jiva-vol-resize' job=run_jiva_volume_resize.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:jiva-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LTWY 3-functional "Resize the jiva volume and verify application status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 4 #
################

kubectl delete job --all -n jiva-volume-resize

echo "********Deprovisioning Percona Application*******"

run_id="deprovision-jiva-volume-resize";test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name

cd litmus
cp apps/percona/deployers/run_litmus_test.yml percona_deprovision_jiva_volume_resize.yml

sed -i -e 's/app: percona-deployment/app: deprovision-percona-jiva-volume-resize/g' \
-e 's/generateName: litmus-percona-/generateName: litmus-percona-deprovision-jiva-volume-resize/g' \
-e 's/value: openebs-standard/value: openebs-jiva-default/g' \
-e 's/value: enabled/value: /g' \
-e 's/value: enable/value: /g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/value: app-percona-ns/value: jiva-volume-resize/g' percona_deprovision_jiva_volume_resize.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_deprovision_jiva_volume_resize.yml           

echo "Running the litmus test for percona Deprovision.."
cat percona_deprovision_jiva_volume_resize.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:deprovision-percona-jiva-volume-resize' job=percona_deprovision_jiva_volume_resize.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:jiva-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-konvoy-e2e/utils/e2e-cr jobname:jiva-volume-resize jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LTWY 3-functional "Resize the jiva volume and verify application status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash openebs-konvoy-e2e/utils/e2e-cr jobname:jiva-volume-resize jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id LTWY 3-functional "Resize the jiva volume and verify application status" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi