#!/bin/bash
set -x

pod(){
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-konvoy && bash openebs-konvoy-e2e/pipelines/OpenEBS-base/stages/3-functional/ZDKG-backup-restore-csi/backup-restore-csi node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"' '"'$VELERO_VERSION'"' '"'$VELERO_PLUGIN_VERSION'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
velero_version=$(echo $5)
velero_plugin_version=$(echo $6)
case_id=ZDKG

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore-csi jobphase:Waiting
bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore-csi jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"


################
# LitmusBook 1 #
################


echo "****Deploying Percona Application using CSI****"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=percona-deployment metadata="")
echo $test_name

cd litmus
echo "Running the litmus test for Percona Deployment.."

cp apps/percona/deployers/run_litmus_test.yml percona_backup_restore_csi.yml

sed -i -e 's/app: percona-deployment/app: deploy-percona-backup-restore-csi/g' \
-e 's/value: openebs-standard/value: openebs-cstor-csi/g' \
-e 's/value: app-percona-ns/value: backup-percona-csi/g' percona_backup_restore_csi.yml

cat percona_backup_restore_csi.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:deploy-percona-backup-restore-csi' job=percona_backup_restore_csi.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:backup-restore-csi $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id ZDKG 3-functional "Create backup using velero and verify if it can be successfully restored" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi


################
# LitmusBook 2 #
################

echo "*******Performing Backup and Restore on Percona Application**********"

test_name=$(bash openebs-konvoy-e2e/utils/generate_test_name testcase=velero-backup-restore metadata="")
echo $test_name

cd litmus
cp experiments/functional/backup_and_restore/run_litmus_test.yml run_backuprestore_csi_test.yml

sed -i -e 's/value: app-percona-ns/value: backup-percona-csi/g' \
-e 's/app: velero-backup-restore/app: velero-backup-restore-csi/g' \
-e 's/value: percona-backup/value: percona-backup-csi/g' run_backuprestore_csi_test.yml

#Getting velero version from gitlab-env
sed -i "s/v1.1.0/$velero_version/g" run_backuprestore_csi_test.yml
sed -i "s/plugin:ci/plugin:$velero_plugin_version/g" run_backuprestore_csi_test.yml

echo "Running the litmus test for Percona Backup Restore.."
cat run_backuprestore_csi_test.yml

bash ../openebs-konvoy-e2e/utils/litmus_job_runner label='app:velero-backup-restore-csi' job=run_backuprestore_csi_test.yml
cd ..
bash openebs-konvoy-e2e/utils/dump_cluster_state;
bash openebs-konvoy-e2e/utils/event_updater jobname:backup-restore-csi $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"


rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore-csi jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id ZDKG 3-functional "Create backup using velero and verify if it can be successfully restored" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash openebs-konvoy-e2e/utils/e2e-cr jobname:backup-restore-csi jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
python3 openebs-konvoy-e2e/utils/result/result_update.py $job_id ZDKG 3-functional "Create backup using velero and verify if it can be successfully restored" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7
else
  pod
fi